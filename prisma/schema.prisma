generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Language {
  id    Int    @id @default(autoincrement())
  code  String @unique
  name  String
  posts Post[]
}

// User ====================================================================================================

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  phone       String   @unique
  firstName   String
  surname     String
  patronymic  String
  country     String?
  region      String?
  settlement  String?
  avatar      String?
  ban         Boolean?
  banResponse String?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

// Banner ====================================================================================================

model Banner {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// GelPolishes

model GelPolishes {
  id                            Int                             @id @default(autoincrement())
  title                         String
  imageSrc                      String
  imageAlt                      String
  discount                      Boolean                         @default(false)
  publish                       Boolean                         @default(false)
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  gelPolishesWithBrandSizePrice GelPolishesWithBrandSizePrice[]
}

model Brand {
  id                            Int                             @id @default(autoincrement())
  brand                         String
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  gelPolishesWithBrandSizePrice GelPolishesWithBrandSizePrice[]
}

model SizeAndPrice {
  id                            Int                             @id @default(autoincrement())
  size                          String
  price                         String
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime                        @updatedAt
  gelPolishesWithBrandSizePrice GelPolishesWithBrandSizePrice[]
}

model GelPolishesWithBrandSizePrice {
  gelPolish      GelPolishes  @relation(fields: [gelPolishId], references: [id])
  gelPolishId    Int
  brand          Brand        @relation(fields: [brandId], references: [id])
  brandId        Int
  sizeAndPrice   SizeAndPrice @relation(fields: [sizeAndPriceId], references: [id])
  sizeAndPriceId Int

  @@id([gelPolishId, brandId, sizeAndPriceId])
}

// Post ====================================================================================================

model Post {
  id           Int         @id @default(autoincrement())
  title        String      @unique
  text         String
  imageSrc     String
  imageAlt     String
  publish      Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  language     Language    @relation(fields: [languageCode], references: [code])
  languageCode String
  categoris    Categoris[]
}

model Categoris {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}
